[package]
name = "cherry"
version.workspace = true
authors.workspace = true
edition.workspace = true
license.workspace = true
repository.workspace = true
keywords.workspace = true
description.workspace = true

[lib]
required-features = []

[[test]]
name = "derive_test"
path = "tests/derive_test.rs"
required-features = ["mysql", "sqlite", "async-std"]

[[test]]
name = "insert_test"
path = "tests/insert_test.rs"
required-features = ["mysql", "sqlite", "chrono", "json", "async-std"]

[[test]]
name = "select_test"
path = "tests/select_test.rs"
required-features = ["mysql", "sqlite", "json", "async-std"]


[dependencies]
anyhow.workspace = true
futures-core.workspace = true
sqlx.workspace = true
cherry-derive = { version = "0.4.0", path = "../cherry-derive"}

[dev-dependencies]
chrono.workspace = true
async-std = { workspace = true, features = ["attributes"] }
sqlx = { workspace = true, features = ["all-databases", "runtime-async-std-rustls"]}


[features]
default = ["macros", "json"] # "migrate",
#derive = ["sqlx/derive"]
macros = ["sqlx/macros"]
migrate = ["sqlx/migrate"]

# async runtime
async-std = ["sqlx/runtime-async-std"]
tokio = ["sqlx/runtime-tokio"]

# TLS
native-tls = ["sqlx/tls-native-tls"]
rustls = ["sqlx/tls-rustls"]

# database
postgres = ["sqlx/postgres"]
mysql = ["sqlx/mysql"]
sqlite = ["sqlx/sqlite"]

# types
json = ["sqlx/json"]
bigdecimal = ["sqlx/bigdecimal"]
bit-vec = ["sqlx/bit-vec"]
chrono = ["sqlx/chrono"]
ipnetwork = ["sqlx/ipnetwork"]
mac_address = ["sqlx/mac_address"]
rust_decimal = ["sqlx/mac_address"]
time = ["sqlx/time"]
uuid = ["sqlx/uuid"]
regexp = ["sqlx/regexp"]
